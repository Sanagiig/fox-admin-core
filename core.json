{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description: core service",
    "title": "core",
    "version": "0.0.1"
  },
  "host": "localhost:9100",
  "basePath": "/",
  "paths": {
    "/api": {
      "post": {
        "description": "Get API by ID | 通过ID获取API",
        "tags": [
          "api"
        ],
        "summary": "Get API by ID | 通过ID获取API",
        "operationId": "GetApiById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ApiInfoResp",
            "schema": {
              "$ref": "#/definitions/ApiInfoResp"
            }
          }
        }
      }
    },
    "/api/create": {
      "post": {
        "description": "Create API information | 创建API",
        "tags": [
          "api"
        ],
        "summary": "Create API information | 创建API",
        "operationId": "CreateApi",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ApiInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/api/delete": {
      "post": {
        "description": "Delete API information | 删除API信息",
        "tags": [
          "api"
        ],
        "summary": "Delete API information | 删除API信息",
        "operationId": "DeleteApi",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/api/list": {
      "post": {
        "description": "Get API list | 获取API列表",
        "tags": [
          "api"
        ],
        "summary": "Get API list | 获取API列表",
        "operationId": "GetApiList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ApiListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ApiListResp",
            "schema": {
              "$ref": "#/definitions/ApiListResp"
            }
          }
        }
      }
    },
    "/api/update": {
      "post": {
        "description": "Update API information | 创建API",
        "tags": [
          "api"
        ],
        "summary": "Update API information | 创建API",
        "operationId": "UpdateApi",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ApiInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/captcha": {
      "get": {
        "description": "Get captcha | 获取验证码",
        "tags": [
          "captcha"
        ],
        "summary": "Get captcha | 获取验证码",
        "operationId": "GetCaptcha",
        "responses": {
          "200": {
            "description": "CaptchaResp",
            "schema": {
              "$ref": "#/definitions/CaptchaResp"
            }
          }
        }
      }
    },
    "/captcha/email": {
      "post": {
        "description": "Get Email Captcha | 获取邮箱验证码",
        "tags": [
          "captcha"
        ],
        "summary": "Get Email Captcha | 获取邮箱验证码",
        "operationId": "GetEmailCaptcha",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EmailCaptchaReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/captcha/sms": {
      "post": {
        "description": "Get SMS Captcha | 获取短信验证码",
        "tags": [
          "captcha"
        ],
        "summary": "Get SMS Captcha | 获取短信验证码",
        "operationId": "GetSmsCaptcha",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/SmsCaptchaReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/core/init/database": {
      "get": {
        "description": "Initialize database | 初始化数据库",
        "tags": [
          "base"
        ],
        "summary": "Initialize database | 初始化数据库",
        "operationId": "InitDatabase",
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/core/init/job_database": {
      "get": {
        "description": "Initialize job database | 初始化定时任务数据库",
        "tags": [
          "base"
        ],
        "summary": "Initialize job database | 初始化定时任务数据库",
        "operationId": "InitJobDatabase",
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/core/init/mcms_database": {
      "get": {
        "description": "Initialize Message Center database | 初始化消息中心数据库",
        "tags": [
          "base"
        ],
        "summary": "Initialize Message Center database | 初始化消息中心数据库",
        "operationId": "InitMcmsDatabase",
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/department": {
      "post": {
        "description": "Get Department by ID | 通过ID获取部门",
        "tags": [
          "department"
        ],
        "summary": "Get Department by ID | 通过ID获取部门",
        "operationId": "GetDepartmentById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DepartmentInfoResp",
            "schema": {
              "$ref": "#/definitions/DepartmentInfoResp"
            }
          }
        }
      }
    },
    "/department/create": {
      "post": {
        "description": "Create department information | 创建部门",
        "tags": [
          "department"
        ],
        "summary": "Create department information | 创建部门",
        "operationId": "CreateDepartment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/DepartmentInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/department/delete": {
      "post": {
        "description": "Delete department information | 删除部门信息",
        "tags": [
          "department"
        ],
        "summary": "Delete department information | 删除部门信息",
        "operationId": "DeleteDepartment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/department/list": {
      "post": {
        "description": "Get department list | 获取部门列表",
        "tags": [
          "department"
        ],
        "summary": "Get department list | 获取部门列表",
        "operationId": "GetDepartmentList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/DepartmentListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DepartmentListResp",
            "schema": {
              "$ref": "#/definitions/DepartmentListResp"
            }
          }
        }
      }
    },
    "/department/update": {
      "post": {
        "description": "Update department information | 更新部门",
        "tags": [
          "department"
        ],
        "summary": "Update department information | 更新部门",
        "operationId": "UpdateDepartment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/DepartmentInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/menu/create": {
      "post": {
        "description": "Create menu information | 创建菜单",
        "tags": [
          "menu"
        ],
        "summary": "Create menu information | 创建菜单",
        "operationId": "CreateMenu",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/MenuPlainInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/menu/delete": {
      "post": {
        "description": "Delete menu information | 删除菜单信息",
        "tags": [
          "menu"
        ],
        "summary": "Delete menu information | 删除菜单信息",
        "operationId": "DeleteMenu",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/menu/list": {
      "get": {
        "description": "Get menu list | 获取菜单列表",
        "tags": [
          "menu"
        ],
        "summary": "Get menu list | 获取菜单列表",
        "operationId": "GetMenuList",
        "responses": {
          "200": {
            "description": "MenuPlainInfoListResp",
            "schema": {
              "$ref": "#/definitions/MenuPlainInfoListResp"
            }
          }
        }
      }
    },
    "/menu/role/list": {
      "get": {
        "description": "Get menu list by role | 获取菜单列表",
        "tags": [
          "menu"
        ],
        "summary": "Get menu list by role | 获取菜单列表",
        "operationId": "GetMenuListByRole",
        "responses": {
          "200": {
            "description": "MenuListResp",
            "schema": {
              "$ref": "#/definitions/MenuListResp"
            }
          }
        }
      }
    },
    "/menu/update": {
      "post": {
        "description": "Update menu information | 更新菜单",
        "tags": [
          "menu"
        ],
        "summary": "Update menu information | 更新菜单",
        "operationId": "UpdateMenu",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/MenuPlainInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/role": {
      "post": {
        "description": "Get Role by ID | 通过ID获取角色",
        "tags": [
          "role"
        ],
        "summary": "Get Role by ID | 通过ID获取角色",
        "operationId": "GetRoleById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RoleInfoResp",
            "schema": {
              "$ref": "#/definitions/RoleInfoResp"
            }
          }
        }
      }
    },
    "/role/create": {
      "post": {
        "description": "Create role information | 创建角色",
        "tags": [
          "role"
        ],
        "summary": "Create role information | 创建角色",
        "operationId": "CreateRole",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RoleInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/role/delete": {
      "post": {
        "description": "Delete role information | 删除角色信息",
        "tags": [
          "role"
        ],
        "summary": "Delete role information | 删除角色信息",
        "operationId": "DeleteRole",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/IDsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/role/list": {
      "post": {
        "description": "Get role list | 获取角色列表",
        "tags": [
          "role"
        ],
        "summary": "Get role list | 获取角色列表",
        "operationId": "GetRoleList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RoleListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RoleListResp",
            "schema": {
              "$ref": "#/definitions/RoleListResp"
            }
          }
        }
      }
    },
    "/role/update": {
      "post": {
        "description": "Update role information | 更新角色",
        "tags": [
          "role"
        ],
        "summary": "Update role information | 更新角色",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RoleInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "description": "Get User by ID | 通过ID获取用户",
        "tags": [
          "user"
        ],
        "summary": "Get User by ID | 通过ID获取用户",
        "operationId": "GetUserById",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UUIDReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UserInfoResp",
            "schema": {
              "$ref": "#/definitions/UserInfoResp"
            }
          }
        }
      }
    },
    "/user/access_token": {
      "get": {
        "description": "Access token | 获取短期 token",
        "tags": [
          "user"
        ],
        "summary": "Access token | 获取短期 token",
        "operationId": "AccessToken",
        "responses": {
          "200": {
            "description": "RefreshTokenResp",
            "schema": {
              "$ref": "#/definitions/RefreshTokenResp"
            }
          }
        }
      }
    },
    "/user/change_password": {
      "post": {
        "description": "Change Password | 修改密码",
        "tags": [
          "user"
        ],
        "summary": "Change Password | 修改密码",
        "operationId": "ChangePassword",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ChangePasswordReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "description": "Create user information | 创建用户",
        "tags": [
          "user"
        ],
        "summary": "Create user information | 创建用户",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/delete": {
      "post": {
        "description": "Delete user information | 删除用户信息",
        "tags": [
          "user"
        ],
        "summary": "Delete user information | 删除用户信息",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UUIDsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/info": {
      "get": {
        "description": "Get user basic information | 获取用户基本信息",
        "tags": [
          "user"
        ],
        "summary": "Get user basic information | 获取用户基本信息",
        "operationId": "GetUserInfo",
        "responses": {
          "200": {
            "description": "UserBaseIDInfoResp",
            "schema": {
              "$ref": "#/definitions/UserBaseIDInfoResp"
            }
          }
        }
      }
    },
    "/user/list": {
      "post": {
        "description": "Get user list | 获取用户列表",
        "tags": [
          "user"
        ],
        "summary": "Get user list | 获取用户列表",
        "operationId": "GetUserList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UserListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UserListResp",
            "schema": {
              "$ref": "#/definitions/UserListResp"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "Log in | 登录",
        "tags": [
          "public_user"
        ],
        "summary": "Log in | 登录",
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LoginReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LoginResp",
            "schema": {
              "$ref": "#/definitions/LoginResp"
            }
          }
        }
      }
    },
    "/user/login_by_email": {
      "post": {
        "description": "Log in by email | 邮箱登录",
        "tags": [
          "public_user"
        ],
        "summary": "Log in by email | 邮箱登录",
        "operationId": "LoginByEmail",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LoginByEmailReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LoginResp",
            "schema": {
              "$ref": "#/definitions/LoginResp"
            }
          }
        }
      }
    },
    "/user/login_by_sms": {
      "post": {
        "description": "Log in by SMS | 短信登录",
        "tags": [
          "public_user"
        ],
        "summary": "Log in by SMS | 短信登录",
        "operationId": "LoginBySms",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LoginBySmsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LoginResp",
            "schema": {
              "$ref": "#/definitions/LoginResp"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "description": "Log out | 退出登陆",
        "tags": [
          "user"
        ],
        "summary": "Log out | 退出登陆",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/perm": {
      "get": {
        "description": "Get user's permission code | 获取用户权限码",
        "tags": [
          "user"
        ],
        "summary": "Get user's permission code | 获取用户权限码",
        "operationId": "GetUserPermCode",
        "responses": {
          "200": {
            "description": "PermCodeResp",
            "schema": {
              "$ref": "#/definitions/PermCodeResp"
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "description": "Get user's profile | 获取用户个人信息",
        "tags": [
          "user"
        ],
        "summary": "Get user's profile | 获取用户个人信息",
        "operationId": "GetUserProfile",
        "responses": {
          "200": {
            "description": "ProfileResp",
            "schema": {
              "$ref": "#/definitions/ProfileResp"
            }
          }
        }
      },
      "post": {
        "description": "Update user's profile | 更新用户个人信息",
        "tags": [
          "user"
        ],
        "summary": "Update user's profile | 更新用户个人信息",
        "operationId": "UpdateUserProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ProfileInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/refresh_token": {
      "get": {
        "description": "Refresh token | 获取刷新 token",
        "tags": [
          "user"
        ],
        "summary": "Refresh token | 获取刷新 token",
        "operationId": "RefreshToken",
        "responses": {
          "200": {
            "description": "RefreshTokenResp",
            "schema": {
              "$ref": "#/definitions/RefreshTokenResp"
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "Register | 注册",
        "tags": [
          "public_user"
        ],
        "summary": "Register | 注册",
        "operationId": "Register",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RegisterReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/register_by_email": {
      "post": {
        "description": "Register by Email | 邮箱注册",
        "tags": [
          "public_user"
        ],
        "summary": "Register by Email | 邮箱注册",
        "operationId": "RegisterByEmail",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RegisterByEmailReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/register_by_sms": {
      "post": {
        "description": "Register by SMS | 短信注册",
        "tags": [
          "public_user"
        ],
        "summary": "Register by SMS | 短信注册",
        "operationId": "RegisterBySms",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RegisterBySmsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/reset_password_by_email": {
      "post": {
        "description": "Reset password by Email | 通过邮箱重置密码",
        "tags": [
          "public_user"
        ],
        "summary": "Reset password by Email | 通过邮箱重置密码",
        "operationId": "ResetPasswordByEmail",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ResetPasswordByEmailReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/reset_password_by_sms": {
      "post": {
        "description": "Reset password by Sms | 通过短信重置密码",
        "tags": [
          "public_user"
        ],
        "summary": "Reset password by Sms | 通过短信重置密码",
        "operationId": "ResetPasswordBySms",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ResetPasswordBySmsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    },
    "/user/update": {
      "post": {
        "description": "Update user information | 更新用户",
        "tags": [
          "user"
        ],
        "summary": "Update user information | 更新用户",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BaseMsgResp",
            "schema": {
              "$ref": "#/definitions/BaseMsgResp"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiInfo": {
      "description": "The API information | API信息",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "description": {
          "description": "API Description | API 描述",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Description"
        },
        "group": {
          "description": "API group | API分组",
          "type": "string",
          "maxLength": 80,
          "minLength": 1,
          "x-go-name": "Group"
        },
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "isRequired": {
          "description": "Whether is required | 是否是必须的 api",
          "type": "boolean",
          "x-go-name": "IsRequired"
        },
        "method": {
          "description": "API request method e.g. POST | API请求类型 如POST",
          "type": "string",
          "maxLength": 7,
          "minLength": 3,
          "x-go-name": "Method"
        },
        "path": {
          "description": "API path | API路径",
          "type": "string",
          "maxLength": 80,
          "minLength": 1,
          "x-go-name": "Path"
        },
        "serviceName": {
          "description": "Service name | 服务名称",
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "trans": {
          "description": "Translated Name | 多语言名称",
          "type": "string",
          "x-go-name": "Trans"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ApiInfoResp": {
      "description": "API information response | API信息返回体",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/ApiInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ApiListInfo": {
      "description": "API list data | API 列表数据",
      "type": "object",
      "properties": {
        "data": {
          "description": "The API list data | API列表数据",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiInfo"
          },
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ApiListReq": {
      "description": "Get API list request params | API列表请求参数",
      "type": "object",
      "required": [
        "page",
        "pageSize"
      ],
      "properties": {
        "description": {
          "description": "API Description | API 描述",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Description"
        },
        "group": {
          "description": "API group | API分组",
          "type": "string",
          "maxLength": 80,
          "x-go-name": "Group"
        },
        "isRequired": {
          "description": "Whether is required | 是否是必须的 api",
          "type": "boolean",
          "x-go-name": "IsRequired"
        },
        "method": {
          "description": "API request method e.g. POST | API请求类型 如POST",
          "type": "string",
          "maxLength": 7,
          "minLength": 3,
          "x-go-name": "Method"
        },
        "page": {
          "description": "Page number | 第几页",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "Page"
        },
        "pageSize": {
          "description": "Page size | 单页数据行数",
          "type": "integer",
          "format": "uint64",
          "maximum": 100000,
          "x-go-name": "PageSize"
        },
        "path": {
          "description": "API path | API路径",
          "type": "string",
          "maxLength": 200,
          "x-go-name": "Path"
        },
        "serviceName": {
          "description": "Service name | 服务名称",
          "type": "string",
          "x-go-name": "ServiceName"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ApiListResp": {
      "description": "The response data of API list | API列表数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/ApiListInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "BaseDataInfo": {
      "description": "The basic response with data | 基础带数据信息",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "BaseIDInfo": {
      "description": "The base ID response data | 基础ID信息",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "BaseListInfo": {
      "description": "The basic response with data | 基础带数据信息",
      "type": "object",
      "properties": {
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "BaseMsgResp": {
      "description": "The basic response without data | 基础不带数据信息",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "BaseUUIDInfo": {
      "description": "The base UUID response data | 基础UUID信息",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "id": {
          "description": "ID",
          "type": "string",
          "x-go-name": "Id"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "CaptchaInfo": {
      "description": "The information of captcha | 验证码数据",
      "type": "object",
      "properties": {
        "captchaId": {
          "type": "string",
          "x-go-name": "CaptchaId"
        },
        "imgPath": {
          "type": "string",
          "x-go-name": "ImgPath"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "CaptchaResp": {
      "description": "The response data of captcha | 验证码返回数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/CaptchaInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ChangePasswordReq": {
      "description": "change user's password request | 修改密码请求参数",
      "type": "object",
      "required": [
        "oldPassword",
        "newPassword"
      ],
      "properties": {
        "newPassword": {
          "description": "User's new password | 用户新密码",
          "type": "string",
          "maxLength": 30,
          "x-go-name": "NewPassword"
        },
        "oldPassword": {
          "description": "User's old password | 用户旧密码",
          "type": "string",
          "maxLength": 30,
          "x-go-name": "OldPassword"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "DepartmentInfo": {
      "description": "The response data of department information | 部门信息",
      "type": "object",
      "properties": {
        "ancestors": {
          "description": "Ancestors | 父级部门列表",
          "type": "string",
          "maxLength": 200,
          "x-go-name": "Ancestors"
        },
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "email": {
          "description": "Email | 邮箱",
          "type": "string",
          "maxLength": 70,
          "minLength": 5,
          "x-go-name": "Email"
        },
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "leader": {
          "description": "Leader | 部门负责人",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Leader"
        },
        "name": {
          "description": "Name | 部门名称",
          "type": "string",
          "maxLength": 50,
          "minLength": 1,
          "x-go-name": "Name"
        },
        "parentId": {
          "description": "ParentId | 父级 ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ParentId"
        },
        "phone": {
          "description": "Phone | 电话号码",
          "type": "string",
          "maxLength": 18,
          "x-go-name": "Phone"
        },
        "remark": {
          "description": "Remark | 备注",
          "type": "string",
          "maxLength": 200,
          "x-go-name": "Remark"
        },
        "sort": {
          "description": "Sort | 排序",
          "type": "integer",
          "format": "uint32",
          "maximum": 10000,
          "x-go-name": "Sort"
        },
        "status": {
          "description": "Status | 状态",
          "type": "integer",
          "format": "uint32",
          "maximum": 20,
          "x-go-name": "Status"
        },
        "trans": {
          "description": "Translated Name | 展示名称",
          "type": "string",
          "x-go-name": "Trans"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "DepartmentInfoResp": {
      "description": "Department information response | 部门信息返回体",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/DepartmentInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "DepartmentListInfo": {
      "description": "Department list data | 部门列表数据",
      "type": "object",
      "properties": {
        "data": {
          "description": "The API list data | 部门列表数据",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepartmentInfo"
          },
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "DepartmentListReq": {
      "description": "Get department list request params | 部门列表请求参数",
      "type": "object",
      "required": [
        "page",
        "pageSize"
      ],
      "properties": {
        "leader": {
          "description": "Leader | 部门负责人",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Leader"
        },
        "name": {
          "description": "Name | 部门名称",
          "type": "string",
          "maxLength": 50,
          "x-go-name": "Name"
        },
        "page": {
          "description": "Page number | 第几页",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "Page"
        },
        "pageSize": {
          "description": "Page size | 单页数据行数",
          "type": "integer",
          "format": "uint64",
          "maximum": 100000,
          "x-go-name": "PageSize"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "DepartmentListResp": {
      "description": "The response data of department list | 部门列表数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/DepartmentListInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "EmailCaptchaReq": {
      "description": "The email captcha request | 邮箱验证码请求参数",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address | 邮箱地址",
          "type": "string",
          "x-go-name": "Email"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "IDPathReq": {
      "description": "Basic ID request | 基础ID地址参数请求",
      "type": "object",
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "IDReq": {
      "description": "Basic ID request | 基础ID参数请求",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "IDsReq": {
      "description": "Basic IDs request | 基础ID数组参数请求",
      "type": "object",
      "required": [
        "ids"
      ],
      "properties": {
        "ids": {
          "description": "IDs",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          },
          "x-go-name": "Ids"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "LoginByEmailReq": {
      "description": "Log in by email request | 邮箱登录参数",
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "captcha": {
          "description": "The Captcha which users input | 用户输入的验证码",
          "type": "string",
          "maxLength": 5,
          "minLength": 5,
          "x-go-name": "Captcha"
        },
        "email": {
          "description": "The user's email address | 用户的邮箱",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Email"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "LoginBySmsReq": {
      "description": "Log in by SMS request | 短信登录参数",
      "type": "object",
      "required": [
        "phoneNumber"
      ],
      "properties": {
        "captcha": {
          "description": "The Captcha which users input | 用户输入的验证码",
          "type": "string",
          "maxLength": 5,
          "minLength": 5,
          "x-go-name": "Captcha"
        },
        "phoneNumber": {
          "description": "The user's mobile phone number | 用户的手机号码",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "PhoneNumber"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "LoginInfo": {
      "description": "The log in information | 登陆返回的数据信息",
      "type": "object",
      "properties": {
        "expire": {
          "description": "Expire timestamp | 过期时间戳",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Expire"
        },
        "token": {
          "description": "Token for authorization | 验证身份的token",
          "type": "string",
          "x-go-name": "Token"
        },
        "userId": {
          "description": "User's UUID | 用户的UUID",
          "type": "string",
          "x-go-name": "UserId"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "LoginReq": {
      "description": "Login request | 登录参数",
      "type": "object",
      "required": [
        "username",
        "password",
        "captchaId",
        "captcha"
      ],
      "properties": {
        "captcha": {
          "description": "The Captcha which users input | 用户输入的验证码",
          "type": "string",
          "maxLength": 5,
          "minLength": 5,
          "x-go-name": "Captcha"
        },
        "captchaId": {
          "description": "Captcha ID which store in redis | 验证码编号, 存在redis中",
          "type": "string",
          "maxLength": 20,
          "minLength": 20,
          "x-go-name": "CaptchaId"
        },
        "password": {
          "description": "Password | 密码",
          "type": "string",
          "maxLength": 30,
          "minLength": 6,
          "x-go-name": "Password"
        },
        "username": {
          "description": "User Name | 用户名",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "LoginResp": {
      "description": "The log in response data | 登录返回数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/LoginInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuInfo": {
      "description": "The response data of menu information | 菜单信息",
      "type": "object",
      "properties": {
        "component": {
          "description": "Component | 组件地址",
          "type": "string",
          "x-go-name": "Component"
        },
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "disabled": {
          "description": "Disabled | 是否启用",
          "type": "boolean",
          "x-go-name": "Disabled"
        },
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "level": {
          "description": "Level | 菜单层级",
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Level"
        },
        "menuType": {
          "description": "MenuType | 菜单类型",
          "type": "integer",
          "format": "uint32",
          "x-go-name": "MenuType"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "name": {
          "description": "Menu name | 菜单名称",
          "type": "string",
          "x-go-name": "Name"
        },
        "parentId": {
          "description": "ParentId | 父级菜单ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ParentId"
        },
        "path": {
          "description": "Path | 菜单访问路径",
          "type": "string",
          "x-go-name": "Path"
        },
        "permission": {
          "description": "Permission symbol | 权限标识",
          "type": "string",
          "x-go-name": "Permission"
        },
        "redirect": {
          "description": "Redirect | 跳转地址",
          "type": "string",
          "x-go-name": "Redirect"
        },
        "serviceName": {
          "description": "Service Name | 服务名称",
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "sort": {
          "description": "Sort | 排序",
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Sort"
        },
        "trans": {
          "description": "Translated Name | 国际化展示名称",
          "type": "string",
          "x-go-name": "Trans"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuInfoResp": {
      "description": "Menu information response | 菜单信息返回体",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/MenuInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuListInfo": {
      "description": "Menu list data | Menu列表数据",
      "type": "object",
      "properties": {
        "data": {
          "description": "The menu list data | 菜单列表数据",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MenuInfo"
          },
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuListResp": {
      "description": "The response data of menu list | 菜单列表返回数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/MenuListInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuPlainInfo": {
      "description": "Menu information plain | 菜单信息无嵌套",
      "type": "object",
      "properties": {
        "affix": {
          "description": "Affix tab | 是否固定标签",
          "type": "boolean",
          "x-go-name": "Affix"
        },
        "carryParam": {
          "description": "The route carries parameters or not | 如果该路由会携带参数，且需要在tab页上面显示。则需要设置为true",
          "type": "boolean",
          "x-go-name": "CarryParam"
        },
        "component": {
          "description": "Component | 组件地址",
          "type": "string",
          "maxLength": 80,
          "x-go-name": "Component"
        },
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "disabled": {
          "description": "Disabled | 是否启用",
          "type": "boolean",
          "x-go-name": "Disabled"
        },
        "dynamicLevel": {
          "description": "The maximum number of pages the router can open | 动态路由可打开Tab页数",
          "type": "integer",
          "format": "uint32",
          "x-go-name": "DynamicLevel"
        },
        "frameSrc": {
          "description": "Iframe path | 内嵌iframe的地址",
          "type": "string",
          "maxLength": 300,
          "x-go-name": "FrameSrc"
        },
        "hideBreadcrumb": {
          "description": "If hide the breadcrumb | 隐藏面包屑",
          "type": "boolean",
          "x-go-name": "HideBreadcrumb"
        },
        "hideChildrenInMenu": {
          "description": "Hide children menu or not | 隐藏所有子菜单",
          "type": "boolean",
          "x-go-name": "HideChildrenInMenu"
        },
        "hideMenu": {
          "description": "Hide menu | 隐藏菜单",
          "type": "boolean",
          "x-go-name": "HideMenu"
        },
        "hideTab": {
          "description": "Hide the tab header | 当前路由不在标签页显示",
          "type": "boolean",
          "x-go-name": "HideTab"
        },
        "icon": {
          "description": "Menu Icon | 菜单图标",
          "type": "string",
          "maxLength": 50,
          "x-go-name": "Icon"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "ignoreKeepAlive": {
          "description": "Do not keep alive the tab | 不缓存Tab",
          "type": "boolean",
          "x-go-name": "IgnoreKeepAlive"
        },
        "level": {
          "description": "Level | 菜单层级",
          "type": "integer",
          "format": "uint32",
          "maximum": 20,
          "x-go-name": "Level"
        },
        "menuType": {
          "description": "MenuType | 菜单类型",
          "type": "integer",
          "format": "uint32",
          "maximum": 10,
          "x-go-name": "MenuType"
        },
        "name": {
          "description": "Menu name | 菜单名称",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Name"
        },
        "parentId": {
          "description": "ParentId | 父级菜单ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ParentId"
        },
        "path": {
          "description": "Path | 菜单访问路径",
          "type": "string",
          "maxLength": 200,
          "x-go-name": "Path"
        },
        "permission": {
          "description": "Permission symbol | 权限标识",
          "type": "string",
          "x-go-name": "Permission"
        },
        "realPath": {
          "description": "The real path of the route without dynamic part | 动态路由的实际Path, 即去除路由的动态部分",
          "type": "string",
          "x-go-name": "RealPath"
        },
        "redirect": {
          "description": "Redirect | 跳转地址",
          "type": "string",
          "maxLength": 300,
          "x-go-name": "Redirect"
        },
        "serviceName": {
          "description": "Service Name | 服务名称",
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "sort": {
          "description": "Sort | 排序",
          "type": "integer",
          "format": "uint32",
          "maximum": 10000,
          "x-go-name": "Sort"
        },
        "title": {
          "description": "Menu title show in page | 菜单显示名",
          "type": "string",
          "maxLength": 50,
          "x-go-name": "Title"
        },
        "trans": {
          "description": "Translated Name | 国际化展示名称",
          "type": "string",
          "x-go-name": "Trans"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuPlainInfoList": {
      "description": "Menu list data | 菜单列表数据",
      "type": "object",
      "properties": {
        "data": {
          "description": "The menu list data | 菜单列表数据",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MenuPlainInfo"
          },
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "MenuPlainInfoListResp": {
      "description": "Menu list data response | 菜单列表数据返回体",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/MenuPlainInfoList"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "Meta": {
      "description": "The meta data of menu | 菜单的meta数据",
      "type": "object",
      "properties": {
        "affix": {
          "description": "Affix tab | 是否固定标签",
          "type": "boolean",
          "x-go-name": "Affix"
        },
        "carryParam": {
          "description": "The route carries parameters or not | 如果该路由会携带参数，且需要在tab页上面显示。则需要设置为true",
          "type": "boolean",
          "x-go-name": "CarryParam"
        },
        "dynamicLevel": {
          "description": "The maximum number of pages the router can open | 动态路由可打开Tab页数",
          "type": "integer",
          "format": "uint32",
          "x-go-name": "DynamicLevel"
        },
        "frameSrc": {
          "description": "Iframe path | 内嵌iframe的地址",
          "type": "string",
          "x-go-name": "FrameSrc"
        },
        "hideBreadcrumb": {
          "description": "If hide the breadcrumb | 隐藏面包屑",
          "type": "boolean",
          "x-go-name": "HideBreadcrumb"
        },
        "hideChildrenInMenu": {
          "description": "Hide children menu or not | 隐藏所有子菜单",
          "type": "boolean",
          "x-go-name": "HideChildrenInMenu"
        },
        "hideMenu": {
          "description": "Hide menu | 隐藏菜单",
          "type": "boolean",
          "x-go-name": "HideMenu"
        },
        "hideTab": {
          "description": "Hide the tab header | 当前路由不在标签页显示",
          "type": "boolean",
          "x-go-name": "HideTab"
        },
        "icon": {
          "description": "Menu Icon | 菜单图标",
          "type": "string",
          "maxLength": 50,
          "x-go-name": "Icon"
        },
        "ignoreKeepAlive": {
          "description": "Do not keep alive the tab | 不缓存Tab",
          "type": "boolean",
          "x-go-name": "IgnoreKeepAlive"
        },
        "realPath": {
          "description": "The real path of the route without dynamic part | 动态路由的实际Path, 即去除路由的动态部分",
          "type": "string",
          "x-go-name": "RealPath"
        },
        "title": {
          "description": "Menu title show in page | 菜单显示名",
          "type": "string",
          "maxLength": 50,
          "x-go-name": "Title"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "PageInfo": {
      "description": "The page request parameters | 列表请求参数",
      "type": "object",
      "required": [
        "page",
        "pageSize"
      ],
      "properties": {
        "page": {
          "description": "Page number | 第几页",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "Page"
        },
        "pageSize": {
          "description": "Page size | 单页数据行数",
          "type": "integer",
          "format": "uint64",
          "maximum": 100000,
          "x-go-name": "PageSize"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "PermCodeResp": {
      "description": "The permission code for front end permission control | 权限码： 用于前端权限控制",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Permission code data | 权限码数据",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Data"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ProfileInfo": {
      "description": "The profile information | 个人信息",
      "type": "object",
      "properties": {
        "avatar": {
          "description": "The user's avatar path | 用户的头像路径",
          "type": "string",
          "maxLength": 300,
          "x-go-name": "Avatar"
        },
        "email": {
          "description": "The user's email address | 用户的邮箱",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Email"
        },
        "mobile": {
          "description": "User's mobile phone number | 用户的手机号码",
          "type": "string",
          "maxLength": 18,
          "x-go-name": "Mobile"
        },
        "nickname": {
          "description": "user's nickname | 用户的昵称",
          "type": "string",
          "maxLength": 10,
          "x-go-name": "Nickname"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ProfileResp": {
      "description": "The profile response data | 个人信息返回数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/ProfileInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RefreshTokenInfo": {
      "description": "Refresh token information | 刷新令牌信息",
      "type": "object",
      "properties": {
        "expiredAt": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExpiredAt"
        },
        "token": {
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RefreshTokenResp": {
      "description": "Refresh token response data | 刷新令牌响应数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/RefreshTokenInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RegisterByEmailReq": {
      "description": "Register by email request | 邮箱注册参数",
      "type": "object",
      "required": [
        "username",
        "password",
        "captcha",
        "email"
      ],
      "properties": {
        "captcha": {
          "description": "The Captcha which users input | 用户输入的验证码",
          "type": "string",
          "maxLength": 5,
          "minLength": 5,
          "x-go-name": "Captcha"
        },
        "email": {
          "description": "The user's email address | 用户的邮箱",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Email"
        },
        "password": {
          "description": "Password | 密码",
          "type": "string",
          "maxLength": 30,
          "minLength": 6,
          "x-go-name": "Password"
        },
        "username": {
          "description": "User Name | 用户名",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RegisterBySmsReq": {
      "description": "Register by SMS request | 短信注册参数",
      "type": "object",
      "required": [
        "username",
        "password",
        "captcha",
        "phoneNumber"
      ],
      "properties": {
        "captcha": {
          "description": "The Captcha which users input | 用户输入的验证码",
          "type": "string",
          "maxLength": 5,
          "minLength": 5,
          "x-go-name": "Captcha"
        },
        "password": {
          "description": "Password | 密码",
          "type": "string",
          "maxLength": 30,
          "minLength": 6,
          "x-go-name": "Password"
        },
        "phoneNumber": {
          "description": "The user's mobile phone number | 用户的手机号码",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "PhoneNumber"
        },
        "username": {
          "description": "User Name | 用户名",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RegisterReq": {
      "description": "register request | 注册参数",
      "type": "object",
      "required": [
        "username",
        "password",
        "captchaId",
        "captcha",
        "email"
      ],
      "properties": {
        "captcha": {
          "description": "The Captcha which users input | 用户输入的验证码",
          "type": "string",
          "maxLength": 5,
          "minLength": 5,
          "x-go-name": "Captcha"
        },
        "captchaId": {
          "description": "Captcha ID which store in redis | 验证码编号, 存在redis中",
          "type": "string",
          "maxLength": 20,
          "minLength": 20,
          "x-go-name": "CaptchaId"
        },
        "email": {
          "description": "The user's email address | 用户的邮箱",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Email"
        },
        "password": {
          "description": "Password | 密码",
          "type": "string",
          "maxLength": 30,
          "minLength": 6,
          "x-go-name": "Password"
        },
        "username": {
          "description": "User Name | 用户名",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ResetPasswordByEmailReq": {
      "description": "Reset password by email request | 通过邮箱重置密码请求",
      "type": "object",
      "properties": {
        "captcha": {
          "type": "string",
          "x-go-name": "Captcha"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "ResetPasswordBySmsReq": {
      "description": "Reset password by SMS request | 通过短信重置密码请求",
      "type": "object",
      "properties": {
        "captcha": {
          "type": "string",
          "x-go-name": "Captcha"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "phoneNumber": {
          "type": "string",
          "x-go-name": "PhoneNumber"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RoleInfo": {
      "description": "The response data of role information | 角色信息",
      "type": "object",
      "properties": {
        "code": {
          "description": "Role code | 角色码",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Code"
        },
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "defaultRouter": {
          "description": "DefaultRouter | 默认首页",
          "type": "string",
          "maxLength": 80,
          "x-go-name": "DefaultRouter"
        },
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "name": {
          "description": "Name | 角色名称",
          "type": "string",
          "maxLength": 30,
          "x-go-name": "Name"
        },
        "remark": {
          "description": "Remark | 备注",
          "type": "string",
          "maxLength": 200,
          "x-go-name": "Remark"
        },
        "sort": {
          "description": "Sort | 排序",
          "type": "integer",
          "format": "uint32",
          "maximum": 10000,
          "x-go-name": "Sort"
        },
        "status": {
          "description": "Status | 状态",
          "type": "integer",
          "format": "uint32",
          "maximum": 20,
          "x-go-name": "Status"
        },
        "trans": {
          "description": "Translated Name | 展示名称",
          "type": "string",
          "x-go-name": "Trans"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RoleInfoResp": {
      "description": "Role information response | 角色信息返回体",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/RoleInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RoleInfoSimple": {
      "description": "The simple role data | 简单的角色数据",
      "type": "object",
      "properties": {
        "roleName": {
          "description": "Role name | 角色名",
          "type": "string",
          "x-go-name": "RoleName"
        },
        "value": {
          "description": "Role value | 角色值",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RoleListInfo": {
      "description": "Role list data | 角色列表数据",
      "type": "object",
      "properties": {
        "data": {
          "description": "The API list data | 角色列表数据",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleInfo"
          },
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RoleListReq": {
      "description": "Get role list request params | 角色列表请求参数",
      "type": "object",
      "required": [
        "page",
        "pageSize"
      ],
      "properties": {
        "name": {
          "description": "Name | 角色名称",
          "type": "string",
          "x-go-name": "Name"
        },
        "page": {
          "description": "Page number | 第几页",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "Page"
        },
        "pageSize": {
          "description": "Page size | 单页数据行数",
          "type": "integer",
          "format": "uint64",
          "maximum": 100000,
          "x-go-name": "PageSize"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "RoleListResp": {
      "description": "The response data of role list | 角色列表数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/RoleListInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "SmsCaptchaReq": {
      "description": "The sms captcha request | 短信验证码请求参数",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "The phone number | 电话号码",
          "type": "string",
          "x-go-name": "PhoneNumber"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UUIDReq": {
      "description": "Basic UUID request | 基础UUID参数请求",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID",
          "type": "string",
          "maxLength": 36,
          "x-go-name": "Id"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UUIDsReq": {
      "description": "Basic UUID array request | 基础UUID数组参数请求",
      "type": "object",
      "required": [
        "ids"
      ],
      "properties": {
        "ids": {
          "description": "Ids",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Ids"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserBaseIDInfo": {
      "description": "The  data of user's basic information | 用户基本信息",
      "type": "object",
      "properties": {
        "avatar": {
          "description": "The user's avatar path | 用户的头像路径",
          "type": "string",
          "x-go-name": "Avatar"
        },
        "departmentName": {
          "description": "Department Name | 部门名称",
          "type": "string",
          "x-go-name": "DepartmentName"
        },
        "desc": {
          "description": "The description of user | 用户的描述信息",
          "type": "string",
          "x-go-name": "Description"
        },
        "homePath": {
          "description": "The home page that the user enters after logging in | 用户登陆后进入的首页",
          "type": "string",
          "x-go-name": "HomePath"
        },
        "nickname": {
          "description": "User's nickname | 用户的昵称",
          "type": "string",
          "x-go-name": "Nickname"
        },
        "roleName": {
          "description": "User's Role Name | 用户的角色名称",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "RoleName"
        },
        "userId": {
          "description": "User's UUID | 用户的UUID",
          "type": "string",
          "x-go-name": "UUID"
        },
        "username": {
          "description": "User's name | 用户名",
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserBaseIDInfoResp": {
      "description": "The response data of user's basic information | 用户基本信息返回数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/UserBaseIDInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "avatar": {
          "description": "Avatar | 头像地址",
          "type": "string",
          "maxLength": 300,
          "x-go-name": "Avatar"
        },
        "createdAt": {
          "description": "Create date | 创建日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedAt"
        },
        "departmentId": {
          "description": "Department ID | 部门ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "DepartmentId"
        },
        "description": {
          "description": "Description | 描述",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Description"
        },
        "email": {
          "description": "Email | 邮箱",
          "type": "string",
          "maxLength": 80,
          "x-go-name": "Email"
        },
        "homePath": {
          "description": "HomePath | 首页",
          "type": "string",
          "maxLength": 70,
          "x-go-name": "HomePath"
        },
        "id": {
          "description": "ID",
          "type": "string",
          "x-go-name": "Id"
        },
        "mobile": {
          "description": "Mobile | 手机号",
          "type": "string",
          "maxLength": 18,
          "x-go-name": "Mobile"
        },
        "nickname": {
          "description": "Nickname | 昵称",
          "type": "string",
          "maxLength": 40,
          "x-go-name": "Nickname"
        },
        "password": {
          "description": "Password | 密码",
          "type": "string",
          "minLength": 6,
          "x-go-name": "Password"
        },
        "positionId": {
          "description": "Position ID | 职位ID",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          },
          "x-go-name": "PositionIds"
        },
        "roleIds": {
          "description": "RoleId | 角色ID",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          },
          "x-go-name": "RoleIds"
        },
        "status": {
          "description": "Status | 状态",
          "type": "integer",
          "format": "uint32",
          "maximum": 20,
          "x-go-name": "Status"
        },
        "updatedAt": {
          "description": "Update date | 更新日期",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UpdatedAt"
        },
        "username": {
          "description": "Username | 用户名",
          "type": "string",
          "maxLength": 50,
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserInfoResp": {
      "description": "User information response | 用户信息返回体",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/UserInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserListInfo": {
      "description": "User list data | 用户列表数据",
      "type": "object",
      "properties": {
        "data": {
          "description": "The API list data | User列表数据",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfo"
          },
          "x-go-name": "Data"
        },
        "total": {
          "description": "The total number of data | 数据总数",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserListReq": {
      "description": "Get user list request params | 用户列表请求参数",
      "type": "object",
      "required": [
        "page",
        "pageSize"
      ],
      "properties": {
        "departmentId": {
          "description": "The user's department ID | 用户所属部门ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "DepartmentId"
        },
        "email": {
          "description": "The user's email address | 用户的邮箱",
          "type": "string",
          "maxLength": 100,
          "x-go-name": "Email"
        },
        "mobile": {
          "description": "User's mobile phone number | 用户的手机号码",
          "type": "string",
          "maxLength": 18,
          "x-go-name": "Mobile"
        },
        "nickname": {
          "description": "User's nickname | 用户的昵称",
          "type": "string",
          "maxLength": 10,
          "x-go-name": "Nickname"
        },
        "page": {
          "description": "Page number | 第几页",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "Page"
        },
        "pageSize": {
          "description": "Page size | 单页数据行数",
          "type": "integer",
          "format": "uint64",
          "maximum": 100000,
          "x-go-name": "PageSize"
        },
        "positionId": {
          "description": "User's position id | 用户的职位ID",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "PositionId"
        },
        "roleIds": {
          "description": "User's role ID | 用户的角色ID",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          },
          "x-go-name": "RoleIds"
        },
        "username": {
          "description": "User Name | 用户名",
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    },
    "UserListResp": {
      "description": "The response data of user list | 用户列表数据",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code | 错误代码",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "data": {
          "description": "Data | 数据",
          "type": "string",
          "x-go-name": "Data",
          "$ref": "#/definitions/UserListInfo"
        },
        "msg": {
          "description": "Message | 提示信息",
          "type": "string",
          "x-go-name": "Msg"
        }
      },
      "x-go-package": "github.com/Sanagiig/fox-admin-core/api/internal/types"
    }
  },
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Token": []
    }
  ]
}