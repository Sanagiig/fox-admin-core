syntax = "proto3";

// Menu message

message MenuInfo {
  optional uint64 id = 1;
  optional int64 createdAt = 2;
  optional int64 updatedAt = 3;
  // Sort Number | 排序编号
  optional uint32 sort = 4;
  // Parent menu ID | 父菜单ID
  optional uint64 parentId = 5;
  // Menu level | 菜单层级
  optional uint32 menuLevel = 6;
  // Menu type | 菜单类型 （菜单或目录）0 目录 1 菜单
  optional uint32 menuType = 7;
  // Index path | 菜单路由路径
  optional string path = 8;
  // Index name | 菜单名称
  optional string name = 9;
  // Redirect path | 跳转路径 （外链）
  optional string redirect = 10;
  // The path of vue file | 组件路径
  optional string component = 11;
  // Disable status | 是否停用
  optional bool disabled = 12;
  // Service Name | 服务名称
  optional string serviceName = 13;
  // Permission symbol | 权限标识
  optional string permission = 14;
  // Menu name | 菜单显示标题
  optional string title = 15;
  // Menu icon | 菜单图标
  optional string icon = 16;
  // Hide menu | 是否隐藏菜单
  optional bool hideMenu = 17;
  // Hide the breadcrumb | 隐藏面包屑
  optional bool hideBreadcrumb = 18;
  // Do not keep alive the tab | 取消页面缓存
  optional bool ignoreKeepAlive = 19;
  // Hide the tab header | 隐藏页头
  optional bool hideTab = 20;
  // Show iframe | 内嵌 iframe
  optional string frameSrc = 21;
  // The route carries parameters or not | 携带参数
  optional bool carryParam = 22;
  // Hide children menu or not | 隐藏所有子菜单
  optional bool hideChildrenInMenu = 23;
  // Affix tab | Tab 固定
  optional bool affix = 24;
  // The maximum number of pages the router can open | 能打开的子TAB数
  optional uint32 dynamicLevel = 25;
  // The real path of the route without dynamic part | 菜单路由不包含参数部分
  optional string realPath = 26;
}

message MenuListResp {
  uint64 total = 1;
  repeated MenuInfo data = 2;
}

message MenuListReq {
  uint64 page = 1;
  uint64 pageSize = 2;
  optional string path = 3;
  optional string name = 4;
  optional string redirect = 5;
}


service Core {

  // Menu management
  // group: menu
  rpc createMenu (MenuInfo) returns (BaseIDResp);
  // group: menu
  rpc updateMenu (MenuInfo) returns (BaseResp);
  // group: menu
  rpc getMenuList (MenuListReq) returns (MenuListResp);
  // group: menu
  rpc getMenuById (IDReq) returns (MenuInfo);
  // group: menu
  rpc deleteMenu (IDsReq) returns (BaseResp);


}